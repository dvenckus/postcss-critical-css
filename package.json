{
  "name": "@veritashealth/postcss-critical-css",
  "version": "3.0.7",
  "description": "Generate critical CSS using PostCSS",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/veritashealth/postcss-critical-css"
  },
  "keywords": [
    "postcss-plugin",
    "postcss",
    "critical-css",
    "critical",
    "css",
    "critical css"
  ],
  "author": "Zach Green",
  "license": "MIT",
  "devDependencies": {
    "@babel/cli": "^7.21.0",
    "@babel/core": "^7.21.0",
    "@babel/eslint-parser": "^7.19.1",
    "@babel/node": "^7.20.7",
    "@babel/preset-env": "^7.20.2",
    "@babel/preset-flow": "^7.18.6",
    "@commitlint/cli": "^17.4.4",
    "@commitlint/config-conventional": "^17.4.4",
    "chalk": "^4.0.0",
    "cssnano": "^5.1.15",
    "eslint": "^8.35.0",
    "eslint-config-prettier": "^8.7.0",
    "eslint-config-standard": "^17.0.0",
    "eslint-plugin-flowtype": "^8.0.3",
    "eslint-plugin-import": "^2.25.2",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-promise": "^6.1.1",
    "flow-bin": "^0.105.0",
    "fs-extra": "^11.1.0",
    "husky": "^8.0.3",
    "lint-staged": "^9.5.0",
    "minimist": "^0.2.4",
    "postcss": "^8.4.21",
    "postcss-reporter": "^7.0.5",
    "prettier": "^2.8.4",
    "process": "^0.11.10",
    "standard-version": "^9.5.0",
    "tape": "^5.6.3"
  },
  "peerDependencies": {
    "postcss": "^8.4.21"
  },
  "scripts": {
    "build": "eslint src/** && npm run flow && babel src --out-dir dist",
    "example": "./node_modules/.bin/babel-node example/example.js",
    "flow": "flow; test $? -eq 0 -o $? -eq 2",
    "eslint": "eslint test/**/*.js && eslint src/**",
    "format": "prettier --write \"**/*.{js,md,yml,.eslintrc}\"",
    "prerelease": "npm run build && npm test",
    "pretest": "./node_modules/.bin/babel-node test/preTest.js",
    "release": "standard-version",
    "test": "npm run test-default && npm run test-no-preserve && npm run test-output-path && npm run test-output-dest && npm run test-no-args && npm run test-no-minify",
    "test-no-args": "npm run pretest -- --noArgs && tape test --noArgs --test=default",
    "test-no-minify": "npm run pretest -- --minify=false --fixtures-dir=fixtures-no-minify && tape test --fixtures-dir=fixtures-no-minify --test=default,this",
    "test-output-dest": "npm run pretest -- --outputDest='custom.css' --fixtures-dir=fixtures-output-dest && tape test --outputDest='custom.css' --fixtures-dir=fixtures-output-dest --test=default",
    "test-default": "npm run pretest && tape test",
    "test-no-preserve": "npm run pretest -- --fixtures-dir=fixtures-no-preserve --preserve=false && tape test --fixtures-dir=fixtures-no-preserve --preserve=false",
    "test-output-path": "npm run pretest -- --outputPath='test/fixtures-output-path' && tape test --outputPath='test/fixtures-output-path' --test=default",
    "prepare": "husky install\n"
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.js": [
      "eslint -- --fix",
      "git add"
    ]
  }
}
